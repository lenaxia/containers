---
name: Rebuild

on:
  workflow_dispatch:
    inputs:
      apps:
        type: string
        description: The name of the apps to build.
        required: false
        default: all
      release:
        type: boolean
        description: Whether to release the apps.
        required: false
        default: false

jobs:
  apps:
    name: Get Apps
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.apps.outputs.apps }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Extract Metadata
        id: apps
        working-directory: apps
        run: |
          apps="${{ inputs.apps }}"
          if [ "${apps}" = "all" ]; then
            apps=$(ls -d */ | tr -d '/' | paste -sd ",")
          fi
          apps=${apps//,/ }
          apps=$(printf "%s/metadata.yaml\n" ${apps})
          apps=$(yq eval-all --indent=0 --output-format=json "[.]" ${apps})
          echo "apps=${apps}" >> $GITHUB_OUTPUT

  build:
    needs: apps
    name: Build ${{ matrix.app.name }}
    uses: ./.github/workflows/image-build-action.yaml
    permissions:
      contents: read
      id-token: write
      packages: write
    strategy:
      matrix:
        app: ${{ fromJSON(needs.apps.outputs.apps) }}
      fail-fast: false
    with:
      app: ${{ matrix.app.name }}
      version: ${{ matrix.app.version }}
      test: ${{ matrix.app.test }}
      release: ${{ inputs.release }}

  status:
    needs: build
    name: Build Success
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Any jobs failed?
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: All jobs passed or skipped?
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: echo "All jobs passed or skipped" && echo "${{ toJSON(needs.*.result) }}"
