---
name: Release

on:
  pull_request:
    branches: ["master"]
    paths: ["apps/**"]
  push:
    branches: ["master"]
    paths: ["apps/**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  changed:
    name: Get Changed Apps
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.changed-apps.outputs.all_changed_and_modified_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine changed apps
        uses: JJGadgets/tj-actions-changed-files@9200e69727eb73eb060652b19946b8a2fdfb654b
        id: changed-apps
        with:
          dir_names: true
          dir_names_max_depth: "1"
          path: apps
          separator: ","

  build:
    needs: changed
    name: Build/Test ${{ matrix.app }} (${{ matrix.platform }})
    runs-on: ${{ matrix.platform == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    if: ${{ needs.changed.outputs.any_changed }}
    strategy:
      matrix:
        app: ${{ needs.changed.outputs.all_changed_and_modified_files }}
        platform: ["amd64", "arm64"]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Image
        uses: docker/build-push-action@v6
        id: build
        with:
          build-args: |-
            VENDOR=${{ github.actor }}
            VERSION=${{ matrix.apps.version }}
            REVISION=${{ github.sha }}
          outputs: |-
            type=docker
            type=image,name=ghcr.io/${{ github.actor }}/${{ matrix.apps.name }},push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}
          context: ./apps/${{ matrix.apps.name }}
          platforms: linux/${{ matrix.platform }}
          labels: |-
            org.opencontainers.image.title=${{ matrix.apps.name }}
            org.opencontainers.image.url=https://ghcr.io/${{ github.actor }}/${{ matrix.apps.name }}
            org.opencontainers.image.version=${{ matrix.apps.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.vendor=${{ github.actor }}

      - name: Setup Goss
        if: ${{ matrix.apps.test }}
        uses: mlipscombe/goss-installation-action@v1.2.2
        with:
          version: latest

      - name: Run Goss Tests
        if: ${{ matrix.apps.test }}
        env:
          CONTAINER_RUNTIME: docker
          GOSS_FILE: ./apps/${{ matrix.apps.name }}/ci/goss.yaml
          GOSS_OPTS: --retry-timeout 60s --sleep 2s --color --format documentation
          GOSS_SLEEP: 2
          GOSS_FILES_STRATEGY: cp
          CONTAINER_LOG_OUTPUT: goss_container_log_output
        run: |-
          dgoss run ${{ steps.build.outputs.imageid }}

      - name: Export Digest
        if: ${{ github.event_name != 'pull_request' }}
        id: digest
        run: |-
          digest="${{ steps.build.outputs.digest }}"
          digest="${digest#sha256:}"
          touch /tmp/${digest}
          echo "digest=${digest}" >> $GITHUB_OUTPUT

      - name: Upload Digest
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.apps.name }}-${{ matrix.platform }}
          path: /tmp/${{ steps.digest.outputs.digest }}
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge ${{ matrix.apps.name }}
    runs-on: ubuntu-latest
    needs: ["changed-files", "build"]
    # Always run merge, as the prior matrix is all or nothing. We test for prior step failure
    # in the "Test Failed Bit" step. This ensures if one app fails, others can still complete.
    if: ${{ !cancelled() && needs.changed-files.outputs.apps != '[]' && github.event_name != 'pull_request' }}
    strategy:
      matrix:
        apps: ${{ fromJSON(needs.changed-files.outputs.apps) }}
      fail-fast: false
    steps:
      - name: Download Digests
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ matrix.apps.name }}-{amd64,arm64}
          merge-multiple: true
          path: /tmp/${{ matrix.apps.name }}

      - name: Log Files
        working-directory: /tmp/${{ matrix.apps.name }}
        run: ls -la

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Merge Manifests
        working-directory: /tmp/${{ matrix.apps.name }}
        run: |
          docker buildx imagetools create --tag ghcr.io/${{ github.actor }}/${{ matrix.apps.name }}:${{ matrix.apps.version }} \
              $(printf 'ghcr.io/${{ github.actor }}/${{ matrix.apps.name }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ github.actor }}/${{ matrix.apps.name }}:${{ matrix.apps.version }}
